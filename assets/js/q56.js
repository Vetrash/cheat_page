import{_ as o,o as s,b as n,F as c,d as e,f as t}from"./index.js";const a={},l=e("h2",null,"Чем управляемые компоненты отличаются от неуправляемых",-1),r=e("p",null," Разница между управляемыми и неуправляемыми компонентами заключается в том, как они управляют своим состоянием и обновляют его. ",-1),_=e("p",null,[e("strong",null,"Управляемые компоненты"),t(" – это компоненты, состояние которых контролируется React. Компонент получает свое текущее значение и обновляет его через реквизиты (пропсы). При изменении значения он также запускает функцию обратного вызова. Это означает, что компонент не хранит собственное внутреннее состояние – вместо этого родительский компонент управляет им и передает значение управляемому компоненту. ")],-1),d=e("p",null,[e("strong",null,"Неуправляемые компоненты"),t(", напротив, управляют своим состоянием самостоятельно с помощью ссылок или других методов. Они хранят и обновляют свое состояние самостоятельно, не полагаясь на реквизиты или обратные вызовы. Родительский компонент имеет меньший контроль над состоянием неуправляемых компонентов. ")],-1);function p(u,i,f,h,m,x){return s(),n(c,null,[l,r,_,d],64)}const g=o(a,[["render",p]]);export{g as default};
