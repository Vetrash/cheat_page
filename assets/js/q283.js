import{_ as l,aN as i}from"./index.js";const t={},p=i("<h2>Операторы в JavaScript</h2><p> Оператор typeof возвращает тип операнда. Например, typeof 42 вернет &quot;number&quot;, а typeof &quot;hello&quot; вернет &quot;string&quot;. </p><p>В JavaScript есть арифметические операторы:</p><ul><li>+ (сложение)</li><li>- (вычитание)</li><li>* (умножение)</li><li>/ (деление)</li><li>% (остаток от деления)</li></ul><p> Инкремент и декремент в JavaScript выполняются с помощью операторов ++ (инкремент) и -- (декремент). </p><p> Кроме стандартного оператора присваивания =, в JavaScript есть также операторы присваивания с комбинированными арифметическими операторами, такие как +=, -= и другие. </p><p>В JavaScript есть операторы сравнения:</p><ul><li>== (равно)</li><li>!= (не равно)</li><li>=== (строго равно)</li><li>!== (строго не равно)</li><li>&gt; (больше)</li><li>&lt; (меньше)</li><li>&gt;= (больше или равно)</li><li>&lt;= (меньше или равно)</li></ul><p> Разница между == и === заключается в том, что == выполняет нестрогое сравнение, преобразуя операнды при необходимости, а === выполняет строгое сравнение без преобразования типов. Рекомендуется использовать === для предотвращения неожиданного преобразования типов. </p><p>Логические операторы в JavaScript:</p><ul><li>&amp;&amp; (логическое И)</li><li>|| (логическое ИЛИ)</li><li>! (логическое НЕ)</li></ul><p>Побитовые операторы в JavaScript:</p><ul><li>&amp; (побитовое И)</li><li>| (побитовое ИЛИ)</li><li>^ (побитовое исключающее ИЛИ)</li><li>~ (побитовое НЕ)</li><li>&lt;&lt; (побитовый сдвиг влево)</li><li>&gt;&gt; (побитовый сдвиг вправо)</li><li>&gt;&gt; (беззнаковый побитовый сдвиг вправо)</li></ul>",13);function a(o,r,c,e,u,s){return p}const _=l(t,[["render",a]]);export{_ as default};
