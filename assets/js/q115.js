import{_ as l,aN as p}from"./index.js";const t={},i=p("<h2>Разница между var, const и let</h2><ul><li><p> Переменные, объявленные с помощью var, имеют функциональную область видимости или область видимости внутри целого файла. </p></li><li><p> Переменные var могут быть переопределены и переобъявлены в той же области видимости. </p></li><li><p> Переменные var поднимаются (hoisted) в начало своей области видимости, что означает, что их можно использовать до их фактического объявления. </p></li></ul><p>let:</p><ul><li><p> Переменные, объявленные с помощью let, имеют блочную область видимости, ограниченную фигурными скобками {}. </p></li><li><p> Переменные let не могут быть переобъявлены в той же области видимости, но могут быть переопределены. </p></li><li><p> Переменные let не поднимаются (не hoisted) и не могут быть использованы до их объявления. </p></li></ul><p>const:</p><ul><li><p> Переменные, объявленные с помощью const, также имеют блочную область видимости. </p></li><li><p> Переменные const должны быть инициализированы при объявлении и их значение не может быть изменено после этого. </p></li><li><p>Переменные const не могут быть переобъявлены или переопределены.</p></li><li><p> const также создает неизменяемую ссылку на объект, поэтому значения внутри объекта могут быть изменены, но сама ссылка остается неизменной. </p></li></ul>",6);function e(o,s,c,n,r,a){return i}const u=l(t,[["render",e]]);export{u as default};
