import{_ as n,o as e,b as o,F as t,d as l}from"./index.js";const s={},a=l("h2",null,"Как работает сборщик мусора в JS",-1),c=l("p",null," Сборщик мусора в JavaScript является встроенной функцией, которая автоматически освобождает память, занятую объектами, которые больше не используются в программе. Он следит за объектами, которые были созданы во время выполнения программы, и определяет, когда они больше не доступны для использования. ",-1),r=l("p",null,' Сборщик мусора в JS использует алгоритм под названием "Mark and Sweep" (Пометка и Очистка). Вот как это работает: ',-1),p=l("ul",null,[l("li",null,[l("p",null," Пометка (Mark): Сборщик мусора начинает с корневых объектов, таких как глобальный объект (window в браузере) и все объекты, на которые есть ссылки из корневых объектов. Он помечает эти объекты как активные. ")]),l("li",null,[l("p",null," Распространение (Propagation): Сборщик мусора рекурсивно проходит через все активные объекты и помечает объекты, на которые они ссылаются, как активные. Этот процесс продолжается до тех пор, пока все достижимые объекты не будут помечены. ")]),l("li",null,[l("p",null," Очистка (Sweep): После завершения пометки и распространения, сборщик мусора проходит по всей памяти и освобождает память, занятую не помеченными объектами. Он удаляет эти объекты и восстанавливает память для будущего использования. ")])],-1);function _(u,i,d,f,h,m){return e(),o(t,null,[a,c,r,p],64)}const k=n(s,[["render",_]]);export{k as default};
