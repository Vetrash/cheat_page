import{_ as o,o as s,b as n,F as a,d as e,f as t}from"./index.js";const c={},r=e("h2",null,"Для чего используется useContext и как он работает",-1),_=e("p",null," В типичном React-приложении данные передаются сверху вниз (от родительского компонента к дочернему) с помощью реквизитов (пропсов). Однако такой способ может оказаться слишком громоздким для некоторых типов реквизитов, которые нужно передавать многим компонентам – из-за языка или темы пользовательского интерфейса, например. Контекст предоставляет возможность обмена данными между компонентами без необходимости явной передачи реквизита через каждый уровень дерева. ",-1),l=e("p",null,[t(" Компонент, вызывающий "),e("strong",null,"useContext"),t(", всегда будет перерисовываться при изменении значения контекста. Если перерисовка компонента требует больших затрат, можно оптимизировать ее с помощью мемоизации. ")],-1);function u(d,p,f,i,x,h){return s(),n(a,null,[r,_,l],64)}const $=o(c,[["render",u]]);export{$ as default};
