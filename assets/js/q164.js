import{_ as l,o as t,b as e,F as o,d as n}from"./index.js";const s={},u=n("h2",null,"Какие способы авторизации вы знаете в HTTP",-1),a=n("ul",null,[n("li",null,[n("p",null,"Basic авторизация: Клиент отправляет логин и пароль в зашифрованном виде в заголовке Authorization. Этот метод не является безопасным, поскольку данные передаются в открытом виде, и рекомендуется использовать его только при использовании HTTPS.")]),n("li",null,[n("p",null,'Bearer авторизация: Клиент получает токен доступа (токен авторизации) после успешной аутентификации, обычно через механизмы, такие как OAuth или OpenID Connect. Затем клиент отправляет этот токен в заголовке Authorization с префиксом "Bearer". Сервер проверяет токен для авторизации запроса.')]),n("li",null,[n("p",null,"Digest авторизация: Похожа на Basic авторизацию, но пароль не передается в открытом виде. Вместо этого клиент отправляет хеш пароля, используя некоторые хэш-функции, такие как MD5 или SHA. Этот метод обеспечивает некоторую степень безопасности, но все же не рекомендуется его использовать без HTTPS.")]),n("li",null,[n("p",null,"OAuth авторизация: OAuth (Open Authorization) - протокол авторизации, который позволяет клиентским приложениям запрашивать доступ к защищенным ресурсам от имени пользователя. Этот метод широко используется в многочисленных API социальных сетей и других онлайн-сервисов.")])],-1),r=n("p",null,"Каждый из этих методов имеет свои особенности и используется в различных сценариях в зависимости от требований проекта.",-1);function i(c,p,_,h,d,A){return t(),e(o,null,[u,a,r],64)}const f=l(s,[["render",i]]);export{f as default};
