import{_ as n,o as a,b as t,F as c,d as l}from"./index.js";const o={},e=l("h2",null,"В чем разница между методами call, apply, bind",-1),p=l("p",null," Методы call, apply и bind являются частью языка JavaScript и используются для управления контекстом выполнения функций. Вот их основные различия: ",-1),s=l("ul",null,[l("li",null,[l("p",null," call: Этот метод вызывает функцию с указанным контекстом и аргументами, переданными в виде отдельных аргументов. Синтаксис метода call выглядит следующим образом: function.call(context, arg1, arg2, .…). При использовании call аргументы передаются в виде списка, разделенного запятыми. ")]),l("li",null,[l("p",null," apply: Этот метод вызывает функцию с указанным контекстом и аргументами, переданными в виде массива. Синтаксис метода apply выглядит следующим образом: function.apply(context, [arg1, arg2, .…]). При использовании apply аргументы передаются в виде массива. ")]),l("li",null,[l("p",null," bind: Этот метод создает новую функцию, привязанную к указанному контексту. Он не вызывает функцию немедленно, а возвращает новую функцию, которую можно вызвать позже. Синтаксис метода bind выглядит следующим образом: function.bind(context). При использовании bind контекст функции фиксируется, и при вызове новой функции этот контекст будет сохраняться. ")])],-1);function i(r,u,d,_,f,b){return a(),t(c,null,[e,p,s],64)}const y=n(o,[["render",i]]);export{y as default};
