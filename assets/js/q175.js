import{_ as n,o as t,b as a,F as o,d as e,f as l}from"./index.js";const s={},c=e("h2",null,"Что такое функции высшего порядка",-1),r=e("p",null," Функции высшего порядка - это функции, которые могут принимать другие функции в качестве аргументов или возвращать функции в качестве результата. В JavaScript функции высшего порядка являются мощным инструментом, позволяющим создавать более гибкий и модульный код. Вот несколько примеров функций высшего порядка: ",-1),u=e("ul",null,[e("li",null,[e("p",null,[e("em",null,"Функция обратного вызова (Callback)"),l(": Функция, которая передается в качестве аргумента в другую функцию и вызывается внутри нее. Это позволяет передавать логику выполнения внутрь другой функции. ")])]),e("li",null,[e("p",null,[e("em",null,"Функция обертка (Wrapper):"),l(" Функция, которая принимает другую функцию и возвращает новую функцию, добавляя дополнительную логику или изменяя поведение оригинальной функции. ")])])],-1);function _(p,d,i,f,m,h){return t(),a(o,null,[c,r,u],64)}const $=n(s,[["render",_]]);export{$ as default};
